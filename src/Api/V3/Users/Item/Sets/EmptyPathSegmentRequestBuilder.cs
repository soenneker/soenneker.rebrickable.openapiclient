// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Soenneker.Rebrickable.OpenApiClient.Api.V3.Users.Item.Sets
{
    /// <summary>
    /// Builds and executes requests for operations under \api\v3\users\{user_token}\sets\
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class EmptyPathSegmentRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Rebrickable.OpenApiClient.Api.V3.Users.Item.Sets.EmptyPathSegmentRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public EmptyPathSegmentRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/v3/users/{user_token}/sets/{?max_parts*,max_year*,min_parts*,min_year*,ordering*,page*,page_size*,search*,set_num*,theme_id*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Rebrickable.OpenApiClient.Api.V3.Users.Item.Sets.EmptyPathSegmentRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public EmptyPathSegmentRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/v3/users/{user_token}/sets/{?max_parts*,max_year*,min_parts*,min_year*,ordering*,page*,page_size*,search*,set_num*,theme_id*}", rawUrl)
        {
        }
        /// <summary>
        /// Get a list of all the Sets in the user&apos;s LEGO collection.### Set List logicSets appearing in multiple Set Lists will be listed multiple times.Optionally, filter by one or more of the below query parameters.
        /// </summary>
        /// <returns>A <see cref="Stream"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<Stream?> GetAsync(Action<RequestConfiguration<global::Soenneker.Rebrickable.OpenApiClient.Api.V3.Users.Item.Sets.EmptyPathSegmentRequestBuilder.EmptyPathSegmentRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<Stream> GetAsync(Action<RequestConfiguration<global::Soenneker.Rebrickable.OpenApiClient.Api.V3.Users.Item.Sets.EmptyPathSegmentRequestBuilder.EmptyPathSegmentRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendPrimitiveAsync<Stream>(requestInfo, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Add one or more Sets to the user&apos;s LEGO collection. Existing Sets are unaffected.### Set List logicThe Set List used when adding sets is chosen in the following order:1. If no Set Lists exist, one will be created and used2. User&apos;s configured default Set List for Imports3. The first Set List alphabetically### Single SetWhen adding a single Set, returns the successfully created Set (status 201) or details for why the Set could notbe added.### Multiple SetsTo add multiple Sets, POST a JSON list of them (using a Content-Type header of &apos;application/json&apos;).e.g:`[{&quot;set_num&quot;:&quot;8043-1&quot;, &quot;quantity&quot;: 1}, {&quot;set_num&quot;:&quot;8110-1&quot;, &quot;quantity&quot;: 2, &quot;include_spares&quot;: &quot;False&quot;}]`Returns a list of successfully added Sets. If the Set already exists or is unrecognised, it will be skipped.
        /// </summary>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task PostAsync(global::Soenneker.Rebrickable.OpenApiClient.Api.V3.Users.Item.Sets.PostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task PostAsync(global::Soenneker.Rebrickable.OpenApiClient.Api.V3.Users.Item.Sets.PostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            if(ReferenceEquals(body, null)) throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            await RequestAdapter.SendNoContentAsync(requestInfo, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Get a list of all the Sets in the user&apos;s LEGO collection.### Set List logicSets appearing in multiple Set Lists will be listed multiple times.Optionally, filter by one or more of the below query parameters.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Soenneker.Rebrickable.OpenApiClient.Api.V3.Users.Item.Sets.EmptyPathSegmentRequestBuilder.EmptyPathSegmentRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Soenneker.Rebrickable.OpenApiClient.Api.V3.Users.Item.Sets.EmptyPathSegmentRequestBuilder.EmptyPathSegmentRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/octet-stream");
            return requestInfo;
        }
        /// <summary>
        /// Add one or more Sets to the user&apos;s LEGO collection. Existing Sets are unaffected.### Set List logicThe Set List used when adding sets is chosen in the following order:1. If no Set Lists exist, one will be created and used2. User&apos;s configured default Set List for Imports3. The first Set List alphabetically### Single SetWhen adding a single Set, returns the successfully created Set (status 201) or details for why the Set could notbe added.### Multiple SetsTo add multiple Sets, POST a JSON list of them (using a Content-Type header of &apos;application/json&apos;).e.g:`[{&quot;set_num&quot;:&quot;8043-1&quot;, &quot;quantity&quot;: 1}, {&quot;set_num&quot;:&quot;8110-1&quot;, &quot;quantity&quot;: 2, &quot;include_spares&quot;: &quot;False&quot;}]`Returns a list of successfully added Sets. If the Set already exists or is unrecognised, it will be skipped.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::Soenneker.Rebrickable.OpenApiClient.Api.V3.Users.Item.Sets.PostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::Soenneker.Rebrickable.OpenApiClient.Api.V3.Users.Item.Sets.PostRequestBody body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            if(ReferenceEquals(body, null)) throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/octet-stream");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/x-www-form-urlencoded", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Rebrickable.OpenApiClient.Api.V3.Users.Item.Sets.EmptyPathSegmentRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Soenneker.Rebrickable.OpenApiClient.Api.V3.Users.Item.Sets.EmptyPathSegmentRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Soenneker.Rebrickable.OpenApiClient.Api.V3.Users.Item.Sets.EmptyPathSegmentRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Get a list of all the Sets in the user&apos;s LEGO collection.### Set List logicSets appearing in multiple Set Lists will be listed multiple times.Optionally, filter by one or more of the below query parameters.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class EmptyPathSegmentRequestBuilderGetQueryParameters 
        {
            [QueryParameter("max_parts")]
            public double? MaxParts { get; set; }
            [QueryParameter("max_year")]
            public double? MaxYear { get; set; }
            [QueryParameter("min_parts")]
            public double? MinParts { get; set; }
            [QueryParameter("min_year")]
            public double? MinYear { get; set; }
            /// <summary>Which field to use when ordering the results.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("ordering")]
            public string? Ordering { get; set; }
#nullable restore
#else
            [QueryParameter("ordering")]
            public string Ordering { get; set; }
#endif
            /// <summary>A page number within the paginated result set.</summary>
            [QueryParameter("page")]
            public int? Page { get; set; }
            /// <summary>Number of results to return per page.</summary>
            [QueryParameter("page_size")]
            public int? PageSize { get; set; }
            /// <summary>A search term.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("search")]
            public string? Search { get; set; }
#nullable restore
#else
            [QueryParameter("search")]
            public string Search { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("set_num")]
            public string? SetNum { get; set; }
#nullable restore
#else
            [QueryParameter("set_num")]
            public string SetNum { get; set; }
#endif
            [QueryParameter("theme_id")]
            public double? ThemeId { get; set; }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class EmptyPathSegmentRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Soenneker.Rebrickable.OpenApiClient.Api.V3.Users.Item.Sets.EmptyPathSegmentRequestBuilder.EmptyPathSegmentRequestBuilderGetQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class EmptyPathSegmentRequestBuilderPostRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
