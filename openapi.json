{
  "swagger": "2.0",
  "info": {
    "title": "",
    "description": "",
    "version": ""
  },
  "host": "rebrickable.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/v3/lego/colors/": {
      "get": {
        "operationId": "lego_colors_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "type": "integer"
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "type": "integer"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          }
        ],
        "description": "Get a list of all Colors.",
        "summary": "Get a list of all Colors.",
        "tags": [
          "lego"
        ]
      }
    },
    "/api/v3/lego/colors/{id}/": {
      "get": {
        "operationId": "lego_colors_read",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "A unique value identifying this color.",
            "type": "string"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          }
        ],
        "description": "Get details about a specific Color.",
        "summary": "Get details about a specific Color.",
        "tags": [
          "lego"
        ]
      }
    },
    "/api/v3/lego/elements/{element_id}/": {
      "get": {
        "operationId": "lego_elements_read",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "element_id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          }
        ],
        "description": "Get details about a specific Element ID.",
        "summary": "Get details about a specific Element ID.",
        "tags": [
          "lego"
        ]
      }
    },
    "/api/v3/lego/minifigs/": {
      "get": {
        "operationId": "lego_minifigs_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "type": "integer"
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "type": "integer"
          },
          {
            "name": "min_parts",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "max_parts",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "in_set_num",
            "required": false,
            "in": "query",
            "description": "",
            "type": "string"
          },
          {
            "name": "in_theme_id",
            "required": false,
            "in": "query",
            "description": "",
            "type": "string"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "type": "string"
          }
        ],
        "description": "Get a list of Minifigs.",
        "summary": "Get a list of Minifigs.",
        "tags": [
          "lego"
        ]
      }
    },
    "/api/v3/lego/minifigs/{set_num}/": {
      "get": {
        "operationId": "lego_minifigs_read",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "set_num",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          }
        ],
        "description": "Get details for a specific Minifig.",
        "summary": "Get details for a specific Minifig.",
        "tags": [
          "lego"
        ]
      }
    },
    "/api/v3/lego/minifigs/{set_num}/parts/": {
      "get": {
        "operationId": "lego_minifigs_parts_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "set_num",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "type": "integer"
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "type": "integer"
          }
        ],
        "description": "Get a list of all Inventory Parts in this Minifig.\n\nOptional parameter inc_part_details=1 can be used to return additional part fields, the same as for a single part lookup.",
        "summary": "Get a list of all Inventory Parts in this Minifig.",
        "tags": [
          "lego"
        ]
      }
    },
    "/api/v3/lego/minifigs/{set_num}/sets/": {
      "get": {
        "operationId": "lego_minifigs_sets_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "set_num",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "type": "integer"
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "type": "integer"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          }
        ],
        "description": "Get a list of Sets a Minifig has appeared in.",
        "summary": "Get a list of Sets a Minifig has appeared in.",
        "tags": [
          "lego"
        ]
      }
    },
    "/api/v3/lego/part_categories/": {
      "get": {
        "operationId": "lego_part_categories_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "type": "integer"
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "type": "integer"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          }
        ],
        "description": "Get a list of all Part Categories.",
        "summary": "Get a list of all Part Categories.",
        "tags": [
          "lego"
        ]
      }
    },
    "/api/v3/lego/part_categories/{id}/": {
      "get": {
        "operationId": "lego_part_categories_read",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "A unique integer value identifying this part category.",
            "type": "integer"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          }
        ],
        "description": "Get details about a specific Part Category.",
        "summary": "Get details about a specific Part Category.",
        "tags": [
          "lego"
        ]
      }
    },
    "/api/v3/lego/parts/": {
      "get": {
        "operationId": "lego_parts_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "type": "integer"
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "type": "integer"
          },
          {
            "name": "part_num",
            "required": false,
            "in": "query",
            "description": "",
            "type": "string"
          },
          {
            "name": "part_nums",
            "required": false,
            "in": "query",
            "description": "",
            "type": "string"
          },
          {
            "name": "part_cat_id",
            "required": false,
            "in": "query",
            "description": "",
            "type": "string"
          },
          {
            "name": "color_id",
            "required": false,
            "in": "query",
            "description": "",
            "type": "string"
          },
          {
            "name": "bricklink_id",
            "required": false,
            "in": "query",
            "description": "",
            "type": "string"
          },
          {
            "name": "brickowl_id",
            "required": false,
            "in": "query",
            "description": "",
            "type": "string"
          },
          {
            "name": "lego_id",
            "required": false,
            "in": "query",
            "description": "",
            "type": "string"
          },
          {
            "name": "ldraw_id",
            "required": false,
            "in": "query",
            "description": "",
            "type": "string"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "type": "string"
          }
        ],
        "description": "Get a list of Parts.\n\nOptional parameter inc_part_details=1 can be used to return additional fields, the same as for a single part lookup.\n\nThe optional part_nums filter parameter should be a comma separated list of part_num without spaces.\n\nOptionally filter by one or more of the below query parameters.",
        "summary": "Get a list of Parts.",
        "tags": [
          "lego"
        ]
      }
    },
    "/api/v3/lego/parts/{part_num}/": {
      "get": {
        "operationId": "lego_parts_read",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "part_num",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          }
        ],
        "description": "Get details about a specific Part.",
        "summary": "Get details about a specific Part.",
        "tags": [
          "lego"
        ]
      }
    },
    "/api/v3/lego/parts/{part_num}/colors/": {
      "get": {
        "operationId": "lego_parts_colors_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "part_num",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "type": "integer"
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "type": "integer"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          }
        ],
        "description": "Get a list of all Colors a Part has appeared in.",
        "summary": "Get a list of all Colors a Part has appeared in.",
        "tags": [
          "lego"
        ]
      }
    },
    "/api/v3/lego/parts/{part_num}/colors/{color_id}/": {
      "get": {
        "operationId": "lego_parts_colors_read",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "color_id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "part_num",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          }
        ],
        "description": "Get details about a specific Part/Color combination.",
        "summary": "Get details about a specific Part/Color combination.",
        "tags": [
          "lego"
        ]
      }
    },
    "/api/v3/lego/parts/{part_num}/colors/{color_id}/sets/": {
      "get": {
        "operationId": "lego_parts_colors_sets_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "color_id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "part_num",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "type": "integer"
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "type": "integer"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          }
        ],
        "description": "Get a list of all Sets the Part/Color combination has appeard in.",
        "summary": "Get a list of all Sets the Part/Color combination has appeard in.",
        "tags": [
          "lego"
        ]
      }
    },
    "/api/v3/lego/sets/": {
      "get": {
        "operationId": "lego_sets_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "type": "integer"
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "type": "integer"
          },
          {
            "name": "theme_id",
            "required": false,
            "in": "query",
            "description": "",
            "type": "string"
          },
          {
            "name": "min_year",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "max_year",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "min_parts",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "max_parts",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "type": "string"
          }
        ],
        "description": "Get a list of Sets, optionally filtered by any of the below parameters.",
        "summary": "Get a list of Sets, optionally filtered by any of the below parameters.",
        "tags": [
          "lego"
        ]
      }
    },
    "/api/v3/lego/sets/{set_num}/": {
      "get": {
        "operationId": "lego_sets_read",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "set_num",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          }
        ],
        "description": "Get details for a specific Set.",
        "summary": "Get details for a specific Set.",
        "tags": [
          "lego"
        ]
      }
    },
    "/api/v3/lego/sets/{set_num}/alternates/": {
      "get": {
        "operationId": "lego_sets_alternates_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "set_num",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "type": "integer"
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "type": "integer"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          }
        ],
        "description": "Get a list of MOCs which are Alternate Builds of a specific Set - i.e. all parts in the MOC can\nbe found in the Set.",
        "summary": "Get a list of MOCs which are Alternate Builds of a specific Set - i.e. all parts in the MOC can",
        "tags": [
          "lego"
        ]
      }
    },
    "/api/v3/lego/sets/{set_num}/minifigs/": {
      "get": {
        "operationId": "lego_sets_minifigs_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "set_num",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "type": "integer"
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "type": "integer"
          }
        ],
        "description": "Get a list of all Inventory Minifigs in this Set.",
        "summary": "Get a list of all Inventory Minifigs in this Set.",
        "tags": [
          "lego"
        ]
      }
    },
    "/api/v3/lego/sets/{set_num}/parts/": {
      "get": {
        "operationId": "lego_sets_parts_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "set_num",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "type": "integer"
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "type": "integer"
          }
        ],
        "description": "Get a list of all Inventory Parts in this Set.\n\nOptional parameter inc_part_details=1 can be used to return additional part fields, the same as for a single part lookup.\nOptional parameter inc_minifig_parts=1 can be used to include minifig parts in this call.\nOptional parameter inc_color_details=0 can be used to prevent color field expansion and reduce response sizes.",
        "summary": "Get a list of all Inventory Parts in this Set.",
        "tags": [
          "lego"
        ]
      }
    },
    "/api/v3/lego/sets/{set_num}/sets/": {
      "get": {
        "operationId": "lego_sets_sets_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "set_num",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "type": "integer"
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "type": "integer"
          }
        ],
        "description": "Get a list of all Inventory Sets in this Set.",
        "summary": "Get a list of all Inventory Sets in this Set.",
        "tags": [
          "lego"
        ]
      }
    },
    "/api/v3/lego/themes/": {
      "get": {
        "operationId": "lego_themes_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "type": "integer"
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "type": "integer"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          }
        ],
        "description": "Return all Themes",
        "summary": "Return all Themes",
        "tags": [
          "lego"
        ]
      }
    },
    "/api/v3/lego/themes/{id}/": {
      "get": {
        "operationId": "lego_themes_read",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "A unique integer value identifying this theme.",
            "type": "integer"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          }
        ],
        "description": "Return details for a specific Theme",
        "summary": "Return details for a specific Theme",
        "tags": [
          "lego"
        ]
      }
    },
    "/api/v3/swagger/": {
      "get": {
        "operationId": "swagger_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [],
        "tags": [
          "swagger"
        ]
      }
    },
    "/api/v3/users/_token/": {
      "post": {
        "operationId": "users__token_create",
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "username",
            "required": true,
            "in": "formData",
            "description": "Username (or email) of user",
            "type": "string"
          },
          {
            "name": "password",
            "required": true,
            "in": "formData",
            "description": "Password of user",
            "type": "string"
          }
        ],
        "description": "Generate a User Token to be used for authorising user account actions in subsequent calls. Username can be either\n the actual username or the user\u0027s email address.",
        "summary": "Generate a User Token to be used for authorising user account actions in subsequent calls. Username can be either",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/api/v3/users/badges/": {
      "get": {
        "operationId": "users_badges_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "type": "integer"
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "type": "integer"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          }
        ],
        "description": "Get a list of all the available Badges",
        "summary": "Get a list of all the available Badges",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v3/users/badges/{id}/": {
      "get": {
        "operationId": "users_badges_read",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "A unique integer value identifying this badge.",
            "type": "integer"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          }
        ],
        "description": "Get details about a specific Badge",
        "summary": "Get details about a specific Badge",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v3/users/{user_token}/allparts/": {
      "get": {
        "operationId": "users_allparts_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "type": "integer"
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "type": "integer"
          },
          {
            "name": "part_num",
            "required": false,
            "in": "query",
            "description": "",
            "type": "string"
          },
          {
            "name": "part_cat_id",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "color_id",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          }
        ],
        "description": "Get a list of all the Parts in all the user\u0027s Part Lists as well as the Parts inside Sets in the user\u0027s Set Lists.\n\n###WARNING this call is very resource intensive, do not overuse it!\n\nOptionally, filter by one or more of the below query parameters.",
        "summary": "Get a list of all the Parts in all the user\u0027s Part Lists as well as the Parts inside Sets in the user\u0027s Set Lists.",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v3/users/{user_token}/build/{set_num}/": {
      "get": {
        "operationId": "users_build_read",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "set_num",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          }
        ],
        "description": "Find out how many parts the user needs to build the specified Set.\n\nThe user\u0027s default Build Settings will be used to calculate a Build Match % using their LEGO Collection of Sets\nand Parts.",
        "summary": "Find out how many parts the user needs to build the specified Set.",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v3/users/{user_token}/lost_parts/": {
      "get": {
        "operationId": "users_lost_parts_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "type": "integer"
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "type": "integer"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          }
        ],
        "description": "Get a list of all the Lost Parts from the user\u0027s LEGO collection.\n\nOptionally, filter by one or more of the below query parameters.",
        "summary": "Get a list of all the Lost Parts from the user\u0027s LEGO collection.",
        "tags": [
          "users"
        ]
      },
      "post": {
        "operationId": "users_lost_parts_create",
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "lost_quantity",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "integer"
          },
          {
            "name": "inv_part_id",
            "required": true,
            "in": "formData",
            "description": "",
            "type": "integer"
          }
        ],
        "description": "Add one or more Lost Parts to the user.\n\n### Single Part\nWhen adding a single Part, returns the successfully created Part (status 201) or details for why the Part could not\nbe added.\n### Multiple Parts\nTo add multiple Parts, POST a JSON list of them (using a Content-Type header of \u0027application/json\u0027). The inv_part_id\nfield can be retrieved from the Set\u0027s inventory.\ne.g:\n\u0060[{\u0022inv_part_id\u0022: 806698, \u0022lost_quantity\u0022: 3},\n  {\u0022inv_part_id\u0022: 256007, \u0022lost_quantity\u0022: 2}]\u0060\nReturns a list of successfully added Parts. If the Part already exists or is unrecognised, it will be skipped.",
        "summary": "Add one or more Lost Parts to the user.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/api/v3/users/{user_token}/lost_parts/{id}/": {
      "delete": {
        "operationId": "users_lost_parts_delete",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          }
        ],
        "description": "Remove the Lost Part from the user.",
        "summary": "Remove the Lost Part from the user.",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v3/users/{user_token}/minifigs/": {
      "get": {
        "operationId": "users_minifigs_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "type": "integer"
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "type": "integer"
          },
          {
            "name": "fig_set_num",
            "required": false,
            "in": "query",
            "description": "",
            "type": "string"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "type": "string"
          }
        ],
        "description": "Get a list of all the Minifigs in all the user\u0027s Sets. Note that this is a read-only list as Minifigs are\nautomatically determined by the Sets in the user\u0027s Set Lists.\n\nMinifigs that were manually added to Set Lists can be retrieved via the\nGET /api/v3/users/{user_token}/sets/ endpoint.\n\nOptionally, filter by one or more of the below query parameters.",
        "summary": "Get a list of all the Minifigs in all the user\u0027s Sets. Note that this is a read-only list as Minifigs are",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v3/users/{user_token}/partlists/": {
      "get": {
        "operationId": "users_partlists_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "type": "integer"
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "type": "integer"
          }
        ],
        "description": "Get a list of all the user\u0027s Part Lists.",
        "summary": "Get a list of all the user\u0027s Part Lists.",
        "tags": [
          "users"
        ]
      },
      "post": {
        "operationId": "users_partlists_create",
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "is_buildable",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "boolean"
          },
          {
            "name": "name",
            "required": true,
            "in": "formData",
            "description": "",
            "type": "string"
          },
          {
            "name": "num_parts",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "integer"
          }
        ],
        "description": "Add a new Part List.",
        "summary": "Add a new Part List.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/api/v3/users/{user_token}/partlists/{list_id}/": {
      "get": {
        "operationId": "users_partlists_read",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "list_id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          }
        ],
        "description": "Get details about a specific Part List.",
        "summary": "Get details about a specific Part List.",
        "tags": [
          "users"
        ]
      },
      "put": {
        "operationId": "users_partlists_update",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "list_id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "is_buildable",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "boolean"
          },
          {
            "name": "name",
            "required": true,
            "in": "formData",
            "description": "",
            "type": "string"
          },
          {
            "name": "num_parts",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "integer"
          }
        ],
        "description": "Replace an existing Part List\u0027s details.",
        "summary": "Replace an existing Part List\u0027s details.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "users"
        ]
      },
      "patch": {
        "operationId": "users_partlists_partial_update",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "list_id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "is_buildable",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "boolean"
          },
          {
            "name": "name",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "string"
          },
          {
            "name": "num_parts",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "integer"
          }
        ],
        "description": "Update an existing Part List\u0027s details.",
        "summary": "Update an existing Part List\u0027s details.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "users"
        ]
      },
      "delete": {
        "operationId": "users_partlists_delete",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "list_id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          }
        ],
        "description": "Delete a Part List and all it\u0027s Parts.",
        "summary": "Delete a Part List and all it\u0027s Parts.",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v3/users/{user_token}/partlists/{list_id}/parts/": {
      "get": {
        "operationId": "users_partlists_parts_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "list_id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "type": "integer"
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "type": "integer"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          }
        ],
        "description": "Get a list of all the Parts in a specific Part List.\n\nOptional parameter inc_part_details=1 can be used to return additional part fields, the same as for a single part lookup.\nOptional parameter inc_color_details=0 can be used to prevent color field expansion and reduce response sizes.",
        "summary": "Get a list of all the Parts in a specific Part List.",
        "tags": [
          "users"
        ]
      },
      "post": {
        "operationId": "users_partlists_parts_create",
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "list_id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "part_num",
            "required": true,
            "in": "formData",
            "description": "",
            "type": "string"
          },
          {
            "name": "quantity",
            "required": true,
            "in": "formData",
            "description": "",
            "type": "integer"
          },
          {
            "name": "color_id",
            "required": true,
            "in": "formData",
            "description": "",
            "type": "integer"
          }
        ],
        "description": "Add one or more Parts to the Part List.\n\n### Single Part\nWhen adding a single Part, returns the successfully created Part (status 201) or details for why the Part could not\nbe added.\n### Multiple Parts\nTo add multiple Parts, POST a JSON list of them (using a Content-Type header of \u0027application/json\u0027).\ne.g:\n\u0060[{\u0022part_num\u0022:\u00223001\u0022, \u0022color_id\u0022: 1, \u0022quantity\u0022: 10},\n {\u0022part_num\u0022:\u00223001\u0022, \u0022color_id\u0022: 2, \u0022quantity\u0022: 20},\n {\u0022part_num\u0022:\u00223002\u0022, \u0022color_id\u0022: 14, \u0022quantity\u0022: 30}]\u0060\nReturns a list of successfully added Parts. If the Part already exists or is unrecognised, it will be skipped.",
        "summary": "Add one or more Parts to the Part List.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/api/v3/users/{user_token}/partlists/{list_id}/parts/{part_num}/{color_id}/": {
      "get": {
        "operationId": "users_partlists_parts_read",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "color_id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "part_num",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "list_id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          }
        ],
        "description": "Get details about a specific Part in the Part List.",
        "summary": "Get details about a specific Part in the Part List.",
        "tags": [
          "users"
        ]
      },
      "put": {
        "operationId": "users_partlists_parts_update",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "color_id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "part_num",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "list_id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "quantity",
            "required": true,
            "in": "formData",
            "description": "",
            "type": "integer"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          }
        ],
        "description": "Replace an existing Part\u0027s details in the Part List.",
        "summary": "Replace an existing Part\u0027s details in the Part List.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "users"
        ]
      },
      "delete": {
        "operationId": "users_partlists_parts_delete",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "color_id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "part_num",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "list_id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          }
        ],
        "description": "Delete a Part from the Part List.",
        "summary": "Delete a Part from the Part List.",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v3/users/{user_token}/parts/": {
      "get": {
        "operationId": "users_parts_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "type": "integer"
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "type": "integer"
          },
          {
            "name": "part_num",
            "required": false,
            "in": "query",
            "description": "",
            "type": "string"
          },
          {
            "name": "part_cat_id",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "color_id",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "type": "string"
          }
        ],
        "description": "Get a list of all the Parts in all the user\u0027s Part Lists.\n\nOptional parameter inc_part_details=1 can be used to return additional part fields, the same as for a single part lookup.\n\n###Set List logic\nParts appearing in multiple Part Lists will be listed multiple times.\n\nOptionally, filter by one or more of the below query parameters.",
        "summary": "Get a list of all the Parts in all the user\u0027s Part Lists.",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v3/users/{user_token}/profile/": {
      "get": {
        "operationId": "users_profile_read",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          }
        ],
        "description": "Get details about a specific user.",
        "summary": "Get details about a specific user.",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v3/users/{user_token}/setlists/": {
      "get": {
        "operationId": "users_setlists_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "type": "integer"
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "type": "integer"
          }
        ],
        "description": "Get a list of all the user\u0027s Set Lists.",
        "summary": "Get a list of all the user\u0027s Set Lists.",
        "tags": [
          "users"
        ]
      },
      "post": {
        "operationId": "users_setlists_create",
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "is_buildable",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "boolean"
          },
          {
            "name": "name",
            "required": true,
            "in": "formData",
            "description": "",
            "type": "string"
          },
          {
            "name": "num_sets",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "integer"
          }
        ],
        "description": "Add a new Set List.",
        "summary": "Add a new Set List.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/api/v3/users/{user_token}/setlists/{list_id}/": {
      "get": {
        "operationId": "users_setlists_read",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "list_id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          }
        ],
        "description": "Get details about a specific Set List.",
        "summary": "Get details about a specific Set List.",
        "tags": [
          "users"
        ]
      },
      "put": {
        "operationId": "users_setlists_update",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "list_id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "is_buildable",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "boolean"
          },
          {
            "name": "name",
            "required": true,
            "in": "formData",
            "description": "",
            "type": "string"
          },
          {
            "name": "num_sets",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "integer"
          }
        ],
        "description": "Replace an existing Set List\u0027s details.",
        "summary": "Replace an existing Set List\u0027s details.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "users"
        ]
      },
      "patch": {
        "operationId": "users_setlists_partial_update",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "list_id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "is_buildable",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "boolean"
          },
          {
            "name": "name",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "string"
          },
          {
            "name": "num_sets",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "integer"
          }
        ],
        "description": "Update an existing Set List\u0027s details.",
        "summary": "Update an existing Set List\u0027s details.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "users"
        ]
      },
      "delete": {
        "operationId": "users_setlists_delete",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "list_id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          }
        ],
        "description": "Delete a Set List and all it\u0027s Sets.",
        "summary": "Delete a Set List and all it\u0027s Sets.",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v3/users/{user_token}/setlists/{list_id}/sets/": {
      "get": {
        "operationId": "users_setlists_sets_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "list_id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "type": "integer"
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "type": "integer"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          }
        ],
        "description": "Get a list of all the Sets in a specific Set List.",
        "summary": "Get a list of all the Sets in a specific Set List.",
        "tags": [
          "users"
        ]
      },
      "post": {
        "operationId": "users_setlists_sets_create",
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "list_id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "set_num",
            "required": true,
            "in": "formData",
            "description": "",
            "type": "string"
          },
          {
            "name": "quantity",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "integer"
          },
          {
            "name": "include_spares",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "boolean"
          }
        ],
        "description": "Add one or more Sets to the Set List. Existing Sets are unaffected.\n\n### Single Set\nWhen adding a single Set, returns the successfully created Set (status 201) or details for why the Set could not\nbe added.\n### Multiple Sets\nTo add multiple Sets, POST a JSON list of them (using a Content-Type header of \u0027application/json\u0027).\ne.g:\n\u0060[{\u0022set_num\u0022:\u00228043-1\u0022, \u0022quantity\u0022: 1},\n {\u0022set_num\u0022:\u00228110-1\u0022, \u0022quantity\u0022: 2, \u0022include_spares\u0022: \u0022False\u0022}]\u0060\nReturns a list of successfully added Sets. If the Set already exists or is unrecognised, it will be skipped.",
        "summary": "Add one or more Sets to the Set List. Existing Sets are unaffected.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/api/v3/users/{user_token}/setlists/{list_id}/sets/{set_num}/": {
      "get": {
        "operationId": "users_setlists_sets_read",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "set_num",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "list_id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          }
        ],
        "description": "Get details about a specific Set in the Set List.",
        "summary": "Get details about a specific Set in the Set List.",
        "tags": [
          "users"
        ]
      },
      "put": {
        "operationId": "users_setlists_sets_update",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "set_num",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "list_id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "quantity",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "integer"
          },
          {
            "name": "include_spares",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "boolean"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          }
        ],
        "description": "Replace an existing Set\u0027s details in the Set List.",
        "summary": "Replace an existing Set\u0027s details in the Set List.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "users"
        ]
      },
      "patch": {
        "operationId": "users_setlists_sets_partial_update",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "set_num",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "list_id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "quantity",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "integer"
          },
          {
            "name": "include_spares",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "boolean"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          }
        ],
        "description": "Update an existing Set\u0027s details in the Set List.",
        "summary": "Update an existing Set\u0027s details in the Set List.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "users"
        ]
      },
      "delete": {
        "operationId": "users_setlists_sets_delete",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "set_num",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "list_id",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          }
        ],
        "description": "Delete a Set from the Set List.",
        "summary": "Delete a Set from the Set List.",
        "tags": [
          "users"
        ]
      }
    },
    "/api/v3/users/{user_token}/sets/": {
      "get": {
        "operationId": "users_sets_list",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "type": "integer"
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "type": "integer"
          },
          {
            "name": "set_num",
            "required": false,
            "in": "query",
            "description": "",
            "type": "string"
          },
          {
            "name": "theme_id",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "min_year",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "max_year",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "min_parts",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "max_parts",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "type": "string"
          }
        ],
        "description": "Get a list of all the Sets in the user\u0027s LEGO collection.\n\n### Set List logic\nSets appearing in multiple Set Lists will be listed multiple times.\n\nOptionally, filter by one or more of the below query parameters.",
        "summary": "Get a list of all the Sets in the user\u0027s LEGO collection.",
        "tags": [
          "users"
        ]
      },
      "post": {
        "operationId": "users_sets_create",
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "set_num",
            "required": true,
            "in": "formData",
            "description": "",
            "type": "string"
          },
          {
            "name": "quantity",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "integer"
          },
          {
            "name": "include_spares",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "boolean"
          }
        ],
        "description": "Add one or more Sets to the user\u0027s LEGO collection. Existing Sets are unaffected.\n\n### Set List logic\nThe Set List used when adding sets is chosen in the following order:\n1. If no Set Lists exist, one will be created and used\n2. User\u0027s configured default Set List for Imports\n3. The first Set List alphabetically\n\n### Single Set\nWhen adding a single Set, returns the successfully created Set (status 201) or details for why the Set could not\nbe added.\n### Multiple Sets\nTo add multiple Sets, POST a JSON list of them (using a Content-Type header of \u0027application/json\u0027).\ne.g:\n\u0060[{\u0022set_num\u0022:\u00228043-1\u0022, \u0022quantity\u0022: 1},\n {\u0022set_num\u0022:\u00228110-1\u0022, \u0022quantity\u0022: 2, \u0022include_spares\u0022: \u0022False\u0022}]\u0060\nReturns a list of successfully added Sets. If the Set already exists or is unrecognised, it will be skipped.",
        "summary": "Add one or more Sets to the user\u0027s LEGO collection. Existing Sets are unaffected.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/api/v3/users/{user_token}/sets/sync/": {
      "post": {
        "operationId": "users_sets_sync_create",
        "responses": {
          "201": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "quantity",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "integer"
          },
          {
            "name": "include_spares",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "boolean"
          },
          {
            "name": "set_num",
            "required": true,
            "in": "formData",
            "description": "",
            "type": "string"
          }
        ],
        "description": "Synchronise a user\u0027s Sets to the POSTed list.\n\n### Set List logic\nThis is used to completely replace the user\u0027s Sets with those in the supplied list.\nIt will remove any Sets in Rebrickable that are not found in the supplied list.\nIt will attempt to keep any current Rebrickable Sets in their existing Set Lists, and will add any new Sets\nfound into the Default Set List for Imports in the user\u0027s settings.\n### Single Set\nWhen adding a single Set, returns the successfully created Set (status 201) or details for why the Set could not\nbe added.\n### Multiple Sets\nTo add multiple Sets, POST a JSON list of them (using a Content-Type header of \u0027application/json\u0027).\ne.g:\n\u0060[{\u0022set_num\u0022:\u00228043-1\u0022, \u0022quantity\u0022: 1},\n {\u0022set_num\u0022:\u00228110-1\u0022, \u0022quantity\u0022: 2, \u0022include_spares\u0022: \u0022False\u0022}]\u0060\nReturns a list of successfully added Sets. If the Set is unrecognised, it will be skipped.",
        "summary": "Synchronise a user\u0027s Sets to the POSTed list.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "users"
        ]
      }
    },
    "/api/v3/users/{user_token}/sets/{set_num}/": {
      "get": {
        "operationId": "users_sets_read",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "set_num",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "set_num",
            "required": false,
            "in": "query",
            "description": "",
            "type": "string"
          },
          {
            "name": "theme_id",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "min_year",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "max_year",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "min_parts",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "max_parts",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "type": "string"
          }
        ],
        "description": "Get details about a specific Set in the user\u0027s LEGO collection.\n\n### Set List logic\nBecause this merges sets found across all Set Lists the fields list_id and include_spares may not be\naccurate unless the Set actually only exists in a single Set List.",
        "summary": "Get details about a specific Set in the user\u0027s LEGO collection.",
        "tags": [
          "users"
        ]
      },
      "put": {
        "operationId": "users_sets_update",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "set_num",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "quantity",
            "required": false,
            "in": "formData",
            "description": "",
            "type": "integer"
          },
          {
            "name": "set_num",
            "required": false,
            "in": "query",
            "description": "",
            "type": "string"
          },
          {
            "name": "theme_id",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "min_year",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "max_year",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "min_parts",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "max_parts",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "type": "string"
          }
        ],
        "description": "Update an existing Set\u0027s quantity in all Set Lists. This PUT call is different to others in that it will create\nthe Set if it doesn\u0027t already exist, and it will delete the Set if you pass a quantity of 0.\n\n### Set List logic\n* Default Set List = user\u0027s configured default import list or the first alphabetically if none exist.\n* Increasing quantity = add to Set in default Set List if it exists, else add it there\n* Decreasing quantity = remove from Set in default Set List first, then from remaining lists until done",
        "summary": "Update an existing Set\u0027s quantity in all Set Lists. This PUT call is different to others in that it will create",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "tags": [
          "users"
        ]
      },
      "delete": {
        "operationId": "users_sets_delete",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "parameters": [
          {
            "name": "user_token",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "set_num",
            "required": true,
            "in": "path",
            "description": "",
            "type": "string"
          },
          {
            "name": "set_num",
            "required": false,
            "in": "query",
            "description": "",
            "type": "string"
          },
          {
            "name": "theme_id",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "min_year",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "max_year",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "min_parts",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "max_parts",
            "required": false,
            "in": "query",
            "description": "",
            "type": "number"
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "type": "string"
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "type": "string"
          }
        ],
        "description": "Delete the Set from all the user\u0027s Set Lists.",
        "summary": "Delete the Set from all the user\u0027s Set Lists.",
        "tags": [
          "users"
        ]
      }
    }
  }
}